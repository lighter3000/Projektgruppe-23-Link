tutorial_text = "Erstelle eine Funktion, die ein Hexagon zeichnet. Die Farbe des Hexagons und die Sichtbarkeit der Turtle sollte random sein. Eine Funktion wird vorher definiert und muss nach der Erstellung dieser aufgerufen werden.<br/><br/>Eine Funktion kann Inhalte anfordern, muss aber nicht welche besitzen.<br/><br/><br/>"
tutorial_code = "Funktion ohne Variablen:\ndef funktion():\n\tprint('Hello World')\n\nfunktion()\n\nKonsole:\nHello World\n\n\nFunktion mit Variablen:\ndef funktion_mit(message='Hello World'):\n\tprint(message)\n\nfunktion_mit('Hallo Welt')\nfunktion_mit()\n\nKonsole:\nHallo Welt\nHello World\n"
init_code = "### imports + setup\nfrom browser import document\nimport turtle\nimport random\t# Neue Bibliothek wird hinzugefügt\nturtle.set_defaults(turtle_canvas_wrapper = document['canvas'], canvwidth = 923, canvheight = 662)\nt = turtle.Turtle()\nt.shape('turtle')\n\n### execution\n\nlines = 6\nlength = 100\nangle = 60\n\ncolor_array=['red','green','blue','turquoise','yellow','#3c79b8']\t\t# Farb-Array mit verschiedenen Farben\nfor x in range(lines):\n\tt.speed(x+1)\t# Turtle-Speed\n\tt.color(color_array[x])\t# Setzt die Farbe der Turtle zufällig aus dem Array\n\tt.forward(length)\t# Bewegt die Turtle um length Einheiten nach vorne\n\tt.right(angle)\t# Dreht die Turtle um angle Grad nach Rechts\n\n\nturtle.done()\t\t\t# turtle Ausführung beenden\n"
written_code = "### imports + setup\nfrom browser import document\nimport turtle\nimport random\t# Neue Bibliothek wird hinzugefügt\nturtle.set_defaults(turtle_canvas_wrapper = document['canvas'], canvwidth = 923, canvheight = 662)\nt = turtle.Turtle()\nt.shape('turtle')\n\n### execution\n\nlines = 6\nlength = 100\nangle = 60\n\ncolor_array=['red','green','blue','turquoise','yellow','#3c79b8']\t\t# Farb-Array mit verschiedenen Farben\nfor x in range(lines):\n\tt.speed(x+1)\t# Turtle-Speed\n\tt.color(color_array[x])\t# Setzt die Farbe der Turtle zufällig aus dem Array\n\tt.forward(length)\t# Bewegt die Turtle um length Einheiten nach vorne\n\tt.right(angle)\t# Dreht die Turtle um angle Grad nach Rechts\n\n\nturtle.done()\t\t\t# turtle Ausführung beenden\n"
solution_code = "### imports + setup\nfrom browser import document\nimport turtle\nimport random\t# Neue Bibliothek wird hinzugefügt\nturtle.set_defaults(turtle_canvas_wrapper = document['canvas'], canvwidth = 923, canvheight = 662)\nt = turtle.Turtle()\nt.shape('turtle')\n\n### execution\n\ndef draw_form(length=100, angle=90, lines=4):\t# Funktion definiert mit 3 vorgelegten Variablen.\n\tcolor_array=['red','green','blue','turquoise','yellow','#3c79b8']\t\t# Farb-Array mit verschiedenen Farben\n\tfor x in range(lines):\n\t\tt.speed(x+1)\t# Turtle-Speed\n\t\tif(random.randint(1,2)==1):\t# Turtle wird zufällig Sichtbar oder nicht mit einer 50/50-Chance\n\t\t\tt.hideturtle()\t# Turtle wird versteckt\n\t\telse:\n\t\t\tt.showturtle()\t# Turtle wird Sichtbar\n\t\tt.color(color_array[random.randint(0,5)])\t# Setzt die Farbe der Turtle zufällig aus dem Array\n\t\tt.forward(length)\t# Bewegt die Turtle um length Einheiten nach vorne\n\t\tt.right(angle)\t# Dreht die Turtle um angle Grad nach Rechts\n\n\ndraw_form(angle=60, lines=6)\n\nturtle.done()\t\t\t# turtle Ausführung beenden\n"